name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        type: string
        required: true
        description: The release version of this release. Must be a semantic version of the form X.Y.Z
      dry-run:
        type: boolean
        required: true
        description: Dry run, will not push branches.

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Input
        run: |
          echo "${{ github.event.inputs.releaseVersion }}" | perl -ne 'die unless m/^\d+\.\d+\.\d+$/'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check Actor
        run: |
          # Release actor should be in the OWNER list
          cat OWNERS | grep ${{ github.actor }}
      - name: Prepare
        run: |
          export GPG_TTY=$(tty)
          (echo 5; echo y; echo save) | gpg --command-fd 0 --no-tty --pinentry-mode loopback --passphrase ${{ secrets.GPG_PASSWORD }} --no-greeting --edit-key 'Kubernetes Client Publishers' trust
          (echo 0; echo y; echo save) | gpg --command-fd 0 --no-tty --pinentry-mode loopback --passphrase ${{ secrets.GPG_PASSWORD }} --no-greeting --edit-key 'Kubernetes Client Publishers' expire
          git config user.email "k8s.ci.robot@gmail.com"
          git config user.name "Kubernetes Prow Robot"
      - name: Release Prepare
        run: |
          git checkout -b 'automated-release-${{ github.event.inputs.releaseVersion }}'
      - name: Release Perform
        if: ${{ github.event.inputs.dry-run != 'true' }}
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSWORD }}
        run: |
          git push https://${{ github.token }}@github.com/${{ github.repository }}.git \
            automated-release-${{ github.event.inputs.releaseVersion }}:automated-release-${{ github.event.inputs.releaseVersion }}
          git push https://${{ github.token }}@github.com/${{ github.repository }}.git v${{ github.event.inputs.releaseVersion }}
      - name: Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: automated-release-${{ github.event.inputs.releaseVersion }}
          destination_branch: ${{ github.ref_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Automated Release: ${{ github.event.inputs.releaseVersion }}"
      - name: Publish Release
        if: ${{ github.event.inputs.dry-run != 'true' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ github.event.inputs.releaseVersion }}